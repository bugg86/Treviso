// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Treviso.Domain.Sql.Contexts;

#nullable disable

namespace Treviso.Domain.Sql.Migrations
{
    [DbContext(typeof(TrevisoContext))]
    partial class TrevisoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Treviso.Domain.Sql.Models.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaptainDiscord1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CaptainDiscord2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Commentator1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Commentator2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Date")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MatchFinished")
                        .HasColumnType("int");

                    b.Property<string>("MatchId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PingSent")
                        .HasColumnType("int");

                    b.Property<string>("Referee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RefereeDiscord")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Round")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Streamer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Team2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Time")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("TournamentId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("User")
                        .HasColumnType("numeric(20, 0)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_MatchId");

                    b.HasIndex("TournamentId");

                    b.ToTable("matches", (string)null);
                });

            modelBuilder.Entity("Treviso.Domain.Sql.Models.Sheet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Admin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Main")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pool")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ref")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RefType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("TournamentId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("User")
                        .HasColumnType("numeric(20, 0)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_SheetId");

                    b.HasIndex("TournamentId")
                        .IsUnique();

                    b.ToTable("sheets", (string)null);
                });

            modelBuilder.Entity("Treviso.Domain.Sql.Models.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Badged")
                        .HasColumnType("int");

                    b.Property<int>("Bws")
                        .HasColumnType("int");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20, 0)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RangeLower")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RangeUpper")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("TeamSize")
                        .HasColumnType("int");

                    b.Property<decimal>("User")
                        .HasColumnType("numeric(20, 0)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("Vs")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK_TournamentId");

                    b.ToTable("tournaments", (string)null);
                });

            modelBuilder.Entity("Treviso.Domain.Sql.Models.Match", b =>
                {
                    b.HasOne("Treviso.Domain.Sql.Models.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_MatchToTournament");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("Treviso.Domain.Sql.Models.Sheet", b =>
                {
                    b.HasOne("Treviso.Domain.Sql.Models.Tournament", "Tournament")
                        .WithOne("Sheet")
                        .HasForeignKey("Treviso.Domain.Sql.Models.Sheet", "TournamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SheetToTournament");

                    b.Navigation("Tournament");
                });

            modelBuilder.Entity("Treviso.Domain.Sql.Models.Tournament", b =>
                {
                    b.Navigation("Matches");

                    b.Navigation("Sheet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
